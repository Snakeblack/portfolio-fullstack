---
---

<script>
  // Simplified mobile-specific fixes
  document.addEventListener('DOMContentLoaded', () => {
    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth <= 768;
    
    if (isMobile) {
      // Add a class to identify mobile for CSS fallbacks
      document.documentElement.classList.add('mobile-device');
        // Simple fallback: ensure elements become visible after 3 seconds if they're still hidden
      setTimeout(() => {
        const hiddenElements = document.querySelectorAll('.scroll-animate, .scroll-animate-fast, .title-animate, .stagger-children > *');
        hiddenElements.forEach(el => {
          const htmlEl = el as HTMLElement;
          const currentOpacity = window.getComputedStyle(htmlEl).opacity;
          if (currentOpacity === '0') {
            htmlEl.style.opacity = '1';
            htmlEl.style.transform = 'translateY(0) scale(1)';
            htmlEl.style.transition = 'opacity 0.3s ease-out, transform 0.3s ease-out';
          }
        });
      }, 3000);
    }
  });
</script>

<style>
  /* Simplified CSS fallback for mobile devices */
  @media (max-width: 768px) {
    .mobile-device .scroll-animate,
    .mobile-device .scroll-animate-fast,
    .mobile-device .title-animate {
      animation: mobileFallbackFadeIn 0.8s ease-out 2s both;
    }
  }
  
  @keyframes mobileFallbackFadeIn {
    from {
      opacity: 0;
      transform: translateY(30px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
</style>
