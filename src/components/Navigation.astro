---
import ThemeToggle from './ThemeToggle.astro';
import { getTranslations } from '../utils/translations.ts';

interface Props {
  currentLocale: 'es' | 'en';
  name: string;
}

const { currentLocale, name } = Astro.props;
const t = getTranslations(currentLocale);

const otherLocaleUrl = currentLocale === 'es' ? '/en' : '/';
const otherLocaleName = currentLocale === 'es' ? 'EN' : 'ES';
const otherLocaleAriaLabel = currentLocale === 'es' ? 'Switch to English version' : 'Cambiar a la versión en español';
const projectGithubUrl = "https://github.com/Snakeblack/portfolio-fullstack";
---

<nav class="fixed top-0 left-0 right-0 z-30">
  {/* Este div es para el fondo a lo ancho completo, blur, borde y sombra */}
  <div class="w-full bg-light-bg/80 dark:bg-dark-bg/80 border-b border-light-border dark:border-dark-border md:backdrop-blur-sm shadow-md">
    {/* Este div es para restringir y centrar el contenido */}
    <div class="max-w-6xl mx-auto px-4 sm:px-6">
      <div class="flex items-center justify-between h-16 md:h-20">
        <a href="https://mretamozo.com" class="font-semibold text-xl md:text-2xl text-light-text dark:text-dark-text tracking-tight mmrg-link">
          {name.split('').map((char, index) => (
            <span class="letter-span" style={`--stagger-delay: ${index * 75}ms`}>{char === ' ' ? '\u00A0' : char}</span>
          ))}
        </a>
      
        <button 
          id="mobile-menu-toggle" 
          class="md:hidden flex items-center justify-center p-2 rounded-md text-light-subtext dark:text-dark-subtext hover:bg-light-card-bg dark:hover:bg-dark-card-bg focus:outline-none focus:ring-2 focus:ring-light-accent dark:focus:ring-dark-accent z-50 transition-colors duration-150"
          aria-controls="nav-content"
          aria-expanded="false"
        >
          <span class="sr-only">Abrir el menú</span>
          <div class="relative w-6 h-6">
            <span id="menu-line-1" class="absolute h-0.5 w-full bg-current transform transition-all duration-300 ease-in-out" style="top: 6px; left: 0;"></span>
            <span id="menu-line-2" class="absolute h-0.5 w-full bg-current transform transition-all duration-300 ease-in-out" style="top: 12px; left: 0;"></span>
            <span id="menu-line-3" class="absolute h-0.5 w-full bg-current transform transition-all duration-300 ease-in-out" style="top: 18px; left: 0;"></span>
          </div>
        </button>
      
        <div 
          id="nav-content" 
          class="
            fixed inset-0 z-40 h-dvh 
            bg-light-bg/75 dark:bg-dark-bg/75 backdrop-blur-lg
            pt-20 pb-10 px-6 
            flex flex-col items-center justify-start 
            overflow-y-auto 
            transition-transform duration-300 ease-[cubic-bezier(0.4,0,0.2,1)] 
            transform -translate-x-full 
            md:static md:h-auto md:flex-row md:items-center md:justify-end md:pt-0 md:pb-0 md:px-0 md:bg-transparent md:dark:bg-transparent
            md:backdrop-blur-none md:translate-x-0 md:gap-8 lg:gap-10 md:z-auto md:overflow-y-visible
          "
        >
          <ul class="mt-auto md:mt-0 pt-8 md:pt-0 flex flex-col md:flex-row items-center gap-6 md:gap-8 lg:gap-10">
            {[ 
              { href: "#about", label: t.nav.about },
              { href: "#work", label: t.nav.work },
              { href: "#projects", label: t.nav.projects },
            ].map((item, index) => (
              <li class="text-base font-medium transition-colors nav-item md:opacity-100 md:transform-none" style={{ transitionDelay: `${100 + index * 50}ms`}}>
                <a 
                  href={item.href} 
                  class="block py-3 px-4 text-lg font-semibold text-light-text dark:text-dark-text hover:bg-light-card-bg dark:hover:bg-dark-card-bg rounded-md transition-all duration-300 ease-in-out hover:scale-105 active:scale-95 md:inline md:py-0 md:px-0 md:text-base md:font-medium md:text-light-subtext md:dark:text-dark-subtext md:hover:text-light-accent md:dark:hover:text-dark-accent md:hover:bg-transparent md:dark:hover:bg-transparent md:rounded-none md:hover:scale-100 md:active:scale-100"
                >
                  {item.label}
                </a>
              </li>
            ))}
          </ul>

          <div class="mt-auto md:mt-0 pt-8 md:pt-0 flex flex-col md:flex-row items-center gap-6 md:gap-8 lg:gap-10">
            <a 
              href={otherLocaleUrl} 
              aria-label={otherLocaleAriaLabel}
              class="p-2 rounded-lg text-base font-medium text-light-subtext dark:text-dark-subtext hover:text-light-accent dark:hover:text-dark-accent hover:bg-light-border dark:hover:bg-dark-border transition-all duration-200 ease-in-out transform hover:scale-110 active:scale-95"
            >
              {otherLocaleName}
            </a>
            <ThemeToggle />
            <a 
              href={projectGithubUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="p-2 rounded-lg text-light-subtext dark:text-dark-subtext hover:text-light-accent dark:hover:text-dark-accent hover:bg-light-border dark:hover:bg-dark-border transition-all duration-200 ease-in-out transform hover:scale-110 active:scale-95"
              aria-label="Project GitHub"
            >
              <svg class="w-5 h-5 md:w-6 md:h-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</nav>

<style>
  #mobile-menu-toggle[aria-expanded="true"] #menu-line-1 {
    transform: translateY(0.375rem) rotate(45deg);
  }
  #mobile-menu-toggle[aria-expanded="true"] #menu-line-2 {
    opacity: 0;
    transform: translateX(-100%);
  }
  #mobile-menu-toggle[aria-expanded="true"] #menu-line-3 {
    transform: translateY(-0.375rem) rotate(-45deg);
  }

  .nav-item {
    opacity: 1;
    transform: translateY(0);
  }

  @media (max-width: 767.98px) {
    #nav-content:not(.translate-x-0) .nav-item {
      opacity: 0;
      transform: translateY(10px);
    }
    
    #nav-content.translate-x-0 .nav-item {
      opacity: 1;
      transform: translateY(0);
      transition-property: opacity, transform;
      transition-duration: 0.3s;
      transition-timing-function: ease-out;
    }
  }

  .mmrg-link .letter-span {
    display: inline-block; /* Allows transform and respects layout */
    position: relative; 
  }

  .mmrg-link:hover .letter-span {
    animation-name: subtleLetterBounce;
    animation-duration: 0.4s;
    animation-timing-function: ease-in-out;
    animation-delay: var(--stagger-delay);
  }

  @keyframes subtleLetterBounce {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-3px); /* Adjust for desired "bounce" height */
    }
  }

  nav a {
  position: relative;
  text-decoration: none; /* Ensure no default underline interferes */
}

/* Animated underline for desktop navigation links */
@media (min-width: 768px) { /* Corresponds to md: breakpoint */
  .nav-item a::after {
    content: '';
    position: absolute;
    width: 0;
    height: 1.5px; /* Subtle thickness */
    bottom: -5px; /* Position below the text */
    left: 50%;
    transform: translateX(-50%);
    background-color: currentColor; /* Uses the link's current text color (accent on hover) */
    transition: width 0.3s ease-in-out;
  }

  .nav-item a:hover::after,
  .nav-item a:focus::after { /* Apply on hover and focus */
    width: 100%;
  }
}
</style>

<script>
  const toggleBtn = document.getElementById('mobile-menu-toggle');
  const navContent = document.getElementById('nav-content');

  if (toggleBtn && navContent) {
    toggleBtn.addEventListener('click', () => {
      const isOpen = navContent.classList.contains('translate-x-0');
      
      if (isOpen) {
        navContent.classList.remove('translate-x-0');
        navContent.classList.add('-translate-x-full');
        toggleBtn.setAttribute('aria-expanded', 'false');
        document.body.style.overflow = '';
      } else {
        navContent.classList.remove('-translate-x-full');
        navContent.classList.add('translate-x-0');
        toggleBtn.setAttribute('aria-expanded', 'true');
        document.body.style.overflow = 'hidden';
      }
    });

    navContent.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', () => {
        if (navContent.classList.contains('translate-x-0') && window.innerWidth < 768) {
          navContent.classList.remove('translate-x-0');
          navContent.classList.add('-translate-x-full');
          toggleBtn.setAttribute('aria-expanded', 'false');
          document.body.style.overflow = '';
        }
      });
    });
  }
</script>
