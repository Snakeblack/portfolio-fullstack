---
import ThemeToggle from './ThemeToggle.astro';
import { getTranslations } from '../utils/translations.ts';

interface Props {
  currentLocale: 'es' | 'en';
  name: string;
}

const { currentLocale, name } = Astro.props;
const t = getTranslations(currentLocale);

const otherLocaleUrl = currentLocale === 'es' ? '/en' : '/';
const otherLocaleName = currentLocale === 'es' ? 'EN' : 'ES';
---

<nav class="fixed top-0 left-0 right-0 z-30 bg-light-bg/80 dark:bg-dark-bg/80 border-b border-light-border dark:border-dark-border md:backdrop-blur-sm">
  <div class="max-w-6xl mx-auto px-4 sm:px-6">
    <div class="flex items-center justify-between h-16">
      <a href="#" class="font-semibold text-xl text-light-text dark:text-dark-text tracking-tight">
        {name}
      </a>
      
      {/* Mobile Menu Toggle Button */}
      <button 
        id="mobile-menu-toggle" 
        class="md:hidden flex items-center justify-center p-2 rounded-md text-light-subtext dark:text-dark-subtext hover:bg-light-card-bg dark:hover:bg-dark-card-bg focus:outline-none focus:ring-2 focus:ring-light-accent dark:focus:ring-dark-accent z-50 transition-colors duration-150"
        aria-controls="nav-content"
        aria-expanded="false"
      >
        <span class="sr-only">Open main menu</span>
        <div class="relative w-6 h-6">
          {/* Animated Menu Icon Lines - Adjusted top positions for symmetry */}
          <span id="menu-line-1" class="absolute h-0.5 w-full bg-current transform transition-all duration-300 ease-in-out" style="top: 6px; left: 0;"></span>
          <span id="menu-line-2" class="absolute h-0.5 w-full bg-current transform transition-all duration-300 ease-in-out" style="top: 12px; left: 0;"></span>
          <span id="menu-line-3" class="absolute h-0.5 w-full bg-current transform transition-all duration-300 ease-in-out" style="top: 18px; left: 0;"></span>
        </div>
      </button>
      
      {/* Navigation Content */}
      <div 
        id="nav-content" 
        class="
          fixed inset-0 z-40 h-screen 
          bg-light-bg/75 dark:bg-dark-bg/75 backdrop-blur-lg
          pt-20 pb-10 px-6 
          flex flex-col items-center justify-start 
          overflow-y-auto 
          transition-transform duration-300 ease-[cubic-bezier(0.4,0,0.2,1)] 
          transform -translate-x-full 
          md:static md:h-auto md:flex-row md:items-center md:justify-end md:pt-0 md:pb-0 md:px-0 md:bg-transparent md:dark:bg-transparent
          md:backdrop-blur-none md:translate-x-0 md:gap-8 md:z-auto md:overflow-y-visible
        "
      >        <ul class="mt-auto md:mt-0 pt-8 md:pt-0 flex flex-col md:flex-row items-center gap-6 md:gap-8">
          {[ 
            { href: "#about", label: t.nav.about },
            { href: "#work", label: t.nav.work },
            { href: "#projects", label: t.nav.projects },
          ].map((item, index) => (
            <li class="text-base font-medium transition-colors" style={{ transitionDelay: `${100 + index * 50}ms`}}>
              <a 
                href={item.href} 
                class="block py-3 px-4 text-lg font-semibold text-[#111] dark:text-dark-text hover:bg-light-card-bg dark:hover:bg-dark-card-bg rounded-md transition-all duration-150 ease-in-out hover:scale-105 active:scale-95 md:inline md:py-0 md:px-0 md:text-base md:text-light-subtext md:dark:text-dark-subtext md:hover:text-light-accent md:dark:hover:text-dark-accent md:hover:bg-transparent md:dark:hover:bg-transparent md:rounded-none md:hover:scale-100 md:active:scale-100"
              >
                {item.label}
              </a>
            </li>
          ))}
        </ul>

        <div class="mt-auto md:mt-0 pt-8 md:pt-0 flex flex-col md:flex-row items-center gap-6 md:gap-8">
          <a href={otherLocaleUrl} class="text-base font-medium text-[#111] dark:text-dark-subtext hover:text-light-accent dark:hover:text-dark-accent transition-colors">
            {otherLocaleName}
          </a>
          <ThemeToggle />
        </div>
      </div>
    </div>
  </div>
</nav>

<style>
  /* Styles for animated menu icon */
  #mobile-menu-toggle[aria-expanded="true"] #menu-line-1 {
    /* Rotates the top line and moves it down to the center */
    transform: translateY(0.375rem) rotate(45deg); /* 6px */
  }
  #mobile-menu-toggle[aria-expanded="true"] #menu-line-2 {
    opacity: 0;
    transform: translateX(-100%); /* Optional: move it out of view while fading */
  }
  #mobile-menu-toggle[aria-expanded="true"] #menu-line-3 {
    /* Rotates the bottom line and moves it up to the center */
    transform: translateY(-0.375rem) rotate(-45deg); /* -6px */
  }

  /* Styles for nav item entrance animation */
  #nav-content.translate-x-0 .nav-item {
    opacity: 1;
    transform: translateY(0);
    transition-property: opacity, transform;
    transition-duration: 0.3s;
    transition-timing-function: ease-out;
  }
  /* Initial state for nav items before animation (already opacity-0 in class) */
  .nav-item {
    transform: translateY(10px);
  }
</style>

<script>
  const toggleBtn = document.getElementById('mobile-menu-toggle');
  const navContent = document.getElementById('nav-content');

  if (toggleBtn && navContent) {
    toggleBtn.addEventListener('click', () => {
      const isOpen = navContent.classList.contains('translate-x-0');
      
      if (isOpen) {
        navContent.classList.remove('translate-x-0');
        navContent.classList.add('-translate-x-full');
        toggleBtn.setAttribute('aria-expanded', 'false');
        document.body.style.overflow = '';
      } else {
        navContent.classList.remove('-translate-x-full');
        navContent.classList.add('translate-x-0');
        toggleBtn.setAttribute('aria-expanded', 'true');
        document.body.style.overflow = 'hidden';
      }
    });

    navContent.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', () => {
        if (navContent.classList.contains('translate-x-0') && window.innerWidth < 768) {
          navContent.classList.remove('translate-x-0');
          navContent.classList.add('-translate-x-full');
          toggleBtn.setAttribute('aria-expanded', 'false');
          document.body.style.overflow = '';
        }
      });
    });
  }
</script>
